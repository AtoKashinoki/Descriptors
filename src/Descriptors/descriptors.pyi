
# import modules
from abc import ABC


class Skeleton(ABC):
    __get_mode: str
    __owner: any
    __name: str
    def __init__(self: any, get_mode: str = ""): ...
    def __set_name__(self: any, owner, name): ...
    def __set__(self: any, instance, value): ...
    def __get__(self: any, instance, owner): ...
    @property
    def get_mode(self): ...
    @property
    def owner(self): ...
    @property
    def name(self): ...


def validate_dtype(data, dtypes: tuple[type | None, ...]) -> str: ...


class DataType:
    __dtypes_type: type = tuple[type | None, ...]
    __dtypes: __dtypes_type
    def __init__(self: any, *dtypes: type | None, get_mode: str = ""): ...
    def __set__(self: any, instance, value): ...
    @property
    def allowed_dtypes(self) -> __dtypes_type: ...


def validate_attribute(data, attributes: tuple[str | None, ...]) -> str: ...


class Attribute:
    __attributes_type: type = tuple[str, ...]
    attributes: __attributes_type
    def __init__(
            self: any, *attributes: str,
            dtypes: tuple[type | None, ...] = (),
            get_mode: str = "c"
    ): ...
    def __set__(self: any, instance, value): ...
